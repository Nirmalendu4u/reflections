How did viewing a diff between two versions of a file help you see the bug that was introduced?
Helps in reverting or correcting the code, taking the previous version as a reference.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It can be helpful in many ways
1. Comparing between to versions of a file can tell you about the kind of changes you have done.
2. Saving manual copies

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: User knows when a logic is complete and right time to commit.
Cons:A manual commit doesn't guarantee a logical separation in between commits. Sometimes, user can choose to commit after fixing multiple bugs and sometimes in the end of feature completion, no matter how big the feature is.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because of dependency between multiple file. we can commit a unit(which might include multiple files)

How can you use the commands git log and git diff to view the history of files?
number of commits
differences between the commits

How might using version control make you more confident to make changes that could break something?
Because of possibility of moving backword

Now that you have your workspace set up, what do you want to try using Git for?
Obviously for version control. I will do certain things like-
Create my own repository
Commit the code
Clone the code
Check log
And check the diff command too

